package org.archstudio.bna.things.shapes;

import org.archstudio.bna.IBNAView;
import org.archstudio.bna.ICoordinateMapper;
import org.archstudio.bna.IThingPeer;
import org.archstudio.bna.keys.IThingKey;
import org.archstudio.bna.keys.IThingRefKey;
import org.archstudio.bna.keys.ThingKey;
import org.archstudio.bna.keys.ThingRefKey;
import org.eclipse.jdt.annotation.NonNullByDefault;
import org.eclipse.jdt.annotation.Nullable;

/*
 * DO NOT EDIT THIS FILE, it is automatically generated. ANY MODIFICATIONS WILL BE OVERWRITTEN.
 *
 * To modify, update the thingdefinition extension at
 * org.archstudio.bna/Package[name=org.archstudio.bna.things.shapes]/Thing[name=Spline].
 */
 
@SuppressWarnings("all")
@NonNullByDefault
public abstract class SplineThingBase extends org.archstudio.bna.things.AbstractThing
	implements org.archstudio.bna.IThing,
			org.archstudio.bna.facets.IHasMutableArrowheads,
			org.archstudio.bna.facets.IHasBoundingBox,
			org.archstudio.bna.facets.IHasMutableEndpoints,
			org.archstudio.bna.facets.IHasMutableGlow,
			org.archstudio.bna.facets.IHasMutableLineData,
			org.archstudio.bna.facets.IHasMutableMidpoints,
			org.archstudio.bna.facets.IHasPoints,
			org.archstudio.bna.facets.IHasMutableReferencePoint,
			org.archstudio.bna.facets.IHasMutableSelected,
			org.archstudio.bna.logics.coordinating.StickPointLogic.IHasSecondaryPoint {

	public SplineThingBase(@Nullable Object id) {
		super(id);
	}

@Override
public IThingPeer<? extends SplineThing> createPeer(IBNAView view, ICoordinateMapper cm){
	return new SplineThingPeer<>((SplineThing)this, view, cm);
}

	@Override
	protected void initProperties() {
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_COLOR_KEY, null);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_EDGE_COLOR_KEY, null);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_LENGTH_KEY, 20);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_SHAPE_KEY, org.archstudio.bna.constants.ArrowheadShape.TRIANGLE);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_WIDTH_KEY, 10);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_COLOR_KEY, null);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_EDGE_COLOR_KEY, null);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_LENGTH_KEY, 20);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_SHAPE_KEY, org.archstudio.bna.constants.ArrowheadShape.TRIANGLE);
		initProperty(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_WIDTH_KEY, 10);
		initProperty(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY, new org.eclipse.swt.graphics.Rectangle(0, 0, 30, 20));
		initProperty(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY, new org.eclipse.swt.graphics.RGB(0, 0, 0));
		initProperty(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_1_KEY, new java.awt.geom.Point2D.Double(10, 0));
		addShapeModifyingKey(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_1_KEY);
		initProperty(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_2_KEY, new java.awt.geom.Point2D.Double(0, 10));
		addShapeModifyingKey(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_2_KEY);
		initProperty(org.archstudio.bna.facets.IHasGlow.GLOW_ALPHA_KEY, 0.5f);
		initProperty(org.archstudio.bna.facets.IHasGlow.GLOW_COLOR_KEY, null);
		initProperty(org.archstudio.bna.facets.IHasGlow.GLOW_WIDTH_KEY, 10);
		initProperty(org.archstudio.bna.facets.IHasLineStyle.LINE_STYLE_KEY, org.archstudio.swtutils.constants.LineStyle.SOLID);
		initProperty(org.archstudio.bna.facets.IHasLineWidth.LINE_WIDTH_KEY, 1);
		initProperty(org.archstudio.bna.facets.IHasMidpoints.MIDPOINTS_KEY, new java.util.ArrayList<java.awt.geom.Point2D>());
		addShapeModifyingKey(org.archstudio.bna.facets.IHasMidpoints.MIDPOINTS_KEY);
		initProperty(org.archstudio.bna.facets.IHasPoints.POINTS_KEY, com.google.common.collect.Lists.<java.awt.geom.Point2D>newArrayList(new java.awt.geom.Point2D.Double(-1, 1), new java.awt.geom.Point2D.Double(0, -1), new java.awt.geom.Point2D.Double(1, 1)));
		initProperty(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY, 0);
		initProperty(org.archstudio.bna.facets.IHasSelected.SELECTED_KEY, false);
		super.initProperties();
	}

	public @Nullable org.eclipse.swt.graphics.RGB getArrowhead1Color() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawArrowhead1Color() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_COLOR_KEY);
	}

	public void setArrowhead1Color(@Nullable org.eclipse.swt.graphics.RGB arrowhead1Color) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_COLOR_KEY, arrowhead1Color);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawArrowhead1Color(@Nullable org.eclipse.swt.graphics.RGB arrowhead1Color) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_COLOR_KEY, arrowhead1Color);
	}

	public @Nullable org.eclipse.swt.graphics.RGB getArrowhead1EdgeColor() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_EDGE_COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawArrowhead1EdgeColor() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_EDGE_COLOR_KEY);
	}

	public void setArrowhead1EdgeColor(@Nullable org.eclipse.swt.graphics.RGB arrowhead1EdgeColor) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_EDGE_COLOR_KEY, arrowhead1EdgeColor);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawArrowhead1EdgeColor(@Nullable org.eclipse.swt.graphics.RGB arrowhead1EdgeColor) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_EDGE_COLOR_KEY, arrowhead1EdgeColor);
	}

	public int getArrowhead1Length() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_LENGTH_KEY);
	}

	/*package*/ int getRawArrowhead1Length() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_LENGTH_KEY);
	}

	public void setArrowhead1Length(int arrowhead1Length) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_LENGTH_KEY, arrowhead1Length);
	}

	/*package*/ int setRawArrowhead1Length(int arrowhead1Length) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_LENGTH_KEY, arrowhead1Length);
	}

	public org.archstudio.bna.constants.ArrowheadShape getArrowhead1Shape() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_SHAPE_KEY);
	}

	/*package*/ org.archstudio.bna.constants.ArrowheadShape getRawArrowhead1Shape() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_SHAPE_KEY);
	}

	public void setArrowhead1Shape(org.archstudio.bna.constants.ArrowheadShape arrowhead1Shape) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_SHAPE_KEY, arrowhead1Shape);
	}

	/*package*/ org.archstudio.bna.constants.ArrowheadShape setRawArrowhead1Shape(org.archstudio.bna.constants.ArrowheadShape arrowhead1Shape) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_SHAPE_KEY, arrowhead1Shape);
	}

	public int getArrowhead1Width() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_WIDTH_KEY);
	}

	/*package*/ int getRawArrowhead1Width() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_WIDTH_KEY);
	}

	public void setArrowhead1Width(int arrowhead1Width) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_WIDTH_KEY, arrowhead1Width);
	}

	/*package*/ int setRawArrowhead1Width(int arrowhead1Width) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_1_WIDTH_KEY, arrowhead1Width);
	}

	public @Nullable org.eclipse.swt.graphics.RGB getArrowhead2Color() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawArrowhead2Color() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_COLOR_KEY);
	}

	public void setArrowhead2Color(@Nullable org.eclipse.swt.graphics.RGB arrowhead2Color) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_COLOR_KEY, arrowhead2Color);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawArrowhead2Color(@Nullable org.eclipse.swt.graphics.RGB arrowhead2Color) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_COLOR_KEY, arrowhead2Color);
	}

	public @Nullable org.eclipse.swt.graphics.RGB getArrowhead2EdgeColor() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_EDGE_COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawArrowhead2EdgeColor() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_EDGE_COLOR_KEY);
	}

	public void setArrowhead2EdgeColor(@Nullable org.eclipse.swt.graphics.RGB arrowhead2EdgeColor) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_EDGE_COLOR_KEY, arrowhead2EdgeColor);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawArrowhead2EdgeColor(@Nullable org.eclipse.swt.graphics.RGB arrowhead2EdgeColor) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_EDGE_COLOR_KEY, arrowhead2EdgeColor);
	}

	public int getArrowhead2Length() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_LENGTH_KEY);
	}

	/*package*/ int getRawArrowhead2Length() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_LENGTH_KEY);
	}

	public void setArrowhead2Length(int arrowhead2Length) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_LENGTH_KEY, arrowhead2Length);
	}

	/*package*/ int setRawArrowhead2Length(int arrowhead2Length) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_LENGTH_KEY, arrowhead2Length);
	}

	public org.archstudio.bna.constants.ArrowheadShape getArrowhead2Shape() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_SHAPE_KEY);
	}

	/*package*/ org.archstudio.bna.constants.ArrowheadShape getRawArrowhead2Shape() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_SHAPE_KEY);
	}

	public void setArrowhead2Shape(org.archstudio.bna.constants.ArrowheadShape arrowhead2Shape) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_SHAPE_KEY, arrowhead2Shape);
	}

	/*package*/ org.archstudio.bna.constants.ArrowheadShape setRawArrowhead2Shape(org.archstudio.bna.constants.ArrowheadShape arrowhead2Shape) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_SHAPE_KEY, arrowhead2Shape);
	}

	public int getArrowhead2Width() {
		return get(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_WIDTH_KEY);
	}

	/*package*/ int getRawArrowhead2Width() {
		return getRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_WIDTH_KEY);
	}

	public void setArrowhead2Width(int arrowhead2Width) {
		set(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_WIDTH_KEY, arrowhead2Width);
	}

	/*package*/ int setRawArrowhead2Width(int arrowhead2Width) {
		return setRaw(org.archstudio.bna.facets.IHasArrowheads.ARROWHEAD_2_WIDTH_KEY, arrowhead2Width);
	}

	public org.eclipse.swt.graphics.Rectangle getBoundingBox() {
		return get(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY);
	}

	/*package*/ org.eclipse.swt.graphics.Rectangle getRawBoundingBox() {
		return getRaw(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY);
	}

	/*package*/ void setBoundingBox(org.eclipse.swt.graphics.Rectangle boundingBox) {
		set(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY, boundingBox);
	}

	/*package*/ org.eclipse.swt.graphics.Rectangle setRawBoundingBox(org.eclipse.swt.graphics.Rectangle boundingBox) {
		return setRaw(org.archstudio.bna.facets.IHasBoundingBox.BOUNDING_BOX_KEY, boundingBox);
	}

	public @Nullable org.eclipse.swt.graphics.RGB getEdgeColor() {
		return get(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawEdgeColor() {
		return getRaw(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY);
	}

	public void setEdgeColor(@Nullable org.eclipse.swt.graphics.RGB edgeColor) {
		set(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY, edgeColor);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawEdgeColor(@Nullable org.eclipse.swt.graphics.RGB edgeColor) {
		return setRaw(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY, edgeColor);
	}

	public java.awt.geom.Point2D getEndpoint1() {
		return get(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_1_KEY);
	}

	/*package*/ java.awt.geom.Point2D getRawEndpoint1() {
		return getRaw(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_1_KEY);
	}

	public void setEndpoint1(java.awt.geom.Point2D endpoint1) {
		set(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_1_KEY, endpoint1);
	}

	/*package*/ java.awt.geom.Point2D setRawEndpoint1(java.awt.geom.Point2D endpoint1) {
		return setRaw(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_1_KEY, endpoint1);
	}

	public java.awt.geom.Point2D getEndpoint2() {
		return get(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_2_KEY);
	}

	/*package*/ java.awt.geom.Point2D getRawEndpoint2() {
		return getRaw(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_2_KEY);
	}

	public void setEndpoint2(java.awt.geom.Point2D endpoint2) {
		set(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_2_KEY, endpoint2);
	}

	/*package*/ java.awt.geom.Point2D setRawEndpoint2(java.awt.geom.Point2D endpoint2) {
		return setRaw(org.archstudio.bna.facets.IHasEndpoints.ENDPOINT_2_KEY, endpoint2);
	}

	public float getGlowAlpha() {
		return get(org.archstudio.bna.facets.IHasGlow.GLOW_ALPHA_KEY);
	}

	/*package*/ float getRawGlowAlpha() {
		return getRaw(org.archstudio.bna.facets.IHasGlow.GLOW_ALPHA_KEY);
	}

	public void setGlowAlpha(float glowAlpha) {
		set(org.archstudio.bna.facets.IHasGlow.GLOW_ALPHA_KEY, glowAlpha);
	}

	/*package*/ float setRawGlowAlpha(float glowAlpha) {
		return setRaw(org.archstudio.bna.facets.IHasGlow.GLOW_ALPHA_KEY, glowAlpha);
	}

	public @Nullable org.eclipse.swt.graphics.RGB getGlowColor() {
		return get(org.archstudio.bna.facets.IHasGlow.GLOW_COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawGlowColor() {
		return getRaw(org.archstudio.bna.facets.IHasGlow.GLOW_COLOR_KEY);
	}

	public void setGlowColor(@Nullable org.eclipse.swt.graphics.RGB glowColor) {
		set(org.archstudio.bna.facets.IHasGlow.GLOW_COLOR_KEY, glowColor);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawGlowColor(@Nullable org.eclipse.swt.graphics.RGB glowColor) {
		return setRaw(org.archstudio.bna.facets.IHasGlow.GLOW_COLOR_KEY, glowColor);
	}

	public int getGlowWidth() {
		return get(org.archstudio.bna.facets.IHasGlow.GLOW_WIDTH_KEY);
	}

	/*package*/ int getRawGlowWidth() {
		return getRaw(org.archstudio.bna.facets.IHasGlow.GLOW_WIDTH_KEY);
	}

	public void setGlowWidth(int glowWidth) {
		set(org.archstudio.bna.facets.IHasGlow.GLOW_WIDTH_KEY, glowWidth);
	}

	/*package*/ int setRawGlowWidth(int glowWidth) {
		return setRaw(org.archstudio.bna.facets.IHasGlow.GLOW_WIDTH_KEY, glowWidth);
	}

	public org.archstudio.swtutils.constants.LineStyle getLineStyle() {
		return get(org.archstudio.bna.facets.IHasLineStyle.LINE_STYLE_KEY);
	}

	/*package*/ org.archstudio.swtutils.constants.LineStyle getRawLineStyle() {
		return getRaw(org.archstudio.bna.facets.IHasLineStyle.LINE_STYLE_KEY);
	}

	public void setLineStyle(org.archstudio.swtutils.constants.LineStyle lineStyle) {
		set(org.archstudio.bna.facets.IHasLineStyle.LINE_STYLE_KEY, lineStyle);
	}

	/*package*/ org.archstudio.swtutils.constants.LineStyle setRawLineStyle(org.archstudio.swtutils.constants.LineStyle lineStyle) {
		return setRaw(org.archstudio.bna.facets.IHasLineStyle.LINE_STYLE_KEY, lineStyle);
	}

	public int getLineWidth() {
		return get(org.archstudio.bna.facets.IHasLineWidth.LINE_WIDTH_KEY);
	}

	/*package*/ int getRawLineWidth() {
		return getRaw(org.archstudio.bna.facets.IHasLineWidth.LINE_WIDTH_KEY);
	}

	public void setLineWidth(int lineWidth) {
		set(org.archstudio.bna.facets.IHasLineWidth.LINE_WIDTH_KEY, lineWidth);
	}

	/*package*/ int setRawLineWidth(int lineWidth) {
		return setRaw(org.archstudio.bna.facets.IHasLineWidth.LINE_WIDTH_KEY, lineWidth);
	}

	public java.util.List<java.awt.geom.Point2D> getMidpoints() {
		return get(org.archstudio.bna.facets.IHasMidpoints.MIDPOINTS_KEY);
	}

	/*package*/ java.util.List<java.awt.geom.Point2D> getRawMidpoints() {
		return getRaw(org.archstudio.bna.facets.IHasMidpoints.MIDPOINTS_KEY);
	}

	public void setMidpoints(java.util.List<java.awt.geom.Point2D> midpoints) {
		set(org.archstudio.bna.facets.IHasMidpoints.MIDPOINTS_KEY, midpoints);
	}

	/*package*/ java.util.List<java.awt.geom.Point2D> setRawMidpoints(java.util.List<java.awt.geom.Point2D> midpoints) {
		return setRaw(org.archstudio.bna.facets.IHasMidpoints.MIDPOINTS_KEY, midpoints);
	}

	public java.util.List<java.awt.geom.Point2D> getPoints() {
		return get(org.archstudio.bna.facets.IHasPoints.POINTS_KEY);
	}

	/*package*/ java.util.List<java.awt.geom.Point2D> getRawPoints() {
		return getRaw(org.archstudio.bna.facets.IHasPoints.POINTS_KEY);
	}

	/*package*/ void setPoints(java.util.List<java.awt.geom.Point2D> points) {
		set(org.archstudio.bna.facets.IHasPoints.POINTS_KEY, points);
	}

	/*package*/ java.util.List<java.awt.geom.Point2D> setRawPoints(java.util.List<java.awt.geom.Point2D> points) {
		return setRaw(org.archstudio.bna.facets.IHasPoints.POINTS_KEY, points);
	}

	public int getRotatingOffset() {
		return get(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY);
	}

	/*package*/ int getRawRotatingOffset() {
		return getRaw(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY);
	}

	public void setRotatingOffset(int rotatingOffset) {
		set(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY, rotatingOffset);
	}

	/*package*/ int setRawRotatingOffset(int rotatingOffset) {
		return setRaw(org.archstudio.bna.facets.IHasRotatingOffset.ROTATING_OFFSET_KEY, rotatingOffset);
	}

	public boolean isSelected() {
		return get(org.archstudio.bna.facets.IHasSelected.SELECTED_KEY);
	}

	/*package*/ boolean isRawSelected() {
		return getRaw(org.archstudio.bna.facets.IHasSelected.SELECTED_KEY);
	}

	public void setSelected(boolean selected) {
		set(org.archstudio.bna.facets.IHasSelected.SELECTED_KEY, selected);
	}

	/*package*/ boolean isRawSelected(boolean selected) {
		return setRaw(org.archstudio.bna.facets.IHasSelected.SELECTED_KEY, selected);
	}

}
