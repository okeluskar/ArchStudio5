package org.archstudio.bna.things.labels;

import org.archstudio.bna.IBNAView;
import org.archstudio.bna.ICoordinateMapper;
import org.archstudio.bna.IThingPeer;
import org.archstudio.bna.keys.IThingKey;
import org.archstudio.bna.keys.IThingRefKey;
import org.archstudio.bna.keys.ThingKey;
import org.archstudio.bna.keys.ThingRefKey;
import org.eclipse.jdt.annotation.NonNullByDefault;
import org.eclipse.jdt.annotation.Nullable;

/*
 * DO NOT EDIT THIS FILE, it is automatically generated. ANY MODIFICATIONS WILL BE OVERWRITTEN.
 *
 * To modify, update the thingdefinition extension at
 * org.archstudio.bna/Package[name=org.archstudio.bna.things.labels]/Thing[name=UserNotification].
 */
 
@SuppressWarnings("all")
@NonNullByDefault
public abstract class UserNotificationThingBase extends org.archstudio.bna.things.AbstractThing
	implements org.archstudio.bna.IThing,
			org.archstudio.bna.facets.IHasMutableAnchorPoint,
			org.archstudio.bna.facets.IHasMutableEdgeColor,
			org.archstudio.bna.facets.IHasMutableFontData,
			org.archstudio.bna.facets.IHasMutableGradientFilled,
			org.archstudio.bna.facets.IHasMutableLife,
			org.archstudio.bna.facets.IHasMutableText {

	public UserNotificationThingBase(@Nullable Object id) {
		super(id);
	}

	@Override
	public IThingPeer<? extends UserNotificationThing> createPeer(IBNAView view, ICoordinateMapper cm) {
		return new UserNotificationThingPeer<>((UserNotificationThing)this, view, cm);
	}

	@Override
	protected void initProperties() {
		initProperty(org.archstudio.bna.facets.IHasAnchorPoint.ANCHOR_POINT_KEY, new java.awt.geom.Point2D.Double(0, 0));
		addShapeModifyingKey(org.archstudio.bna.facets.IHasAnchorPoint.ANCHOR_POINT_KEY);
		initProperty(org.archstudio.bna.facets.IHasColor.COLOR_KEY, new org.eclipse.swt.graphics.RGB(0, 0, 0));
		initProperty(org.archstudio.bna.facets.IHasFontData.DONT_INCREASE_FONT_SIZE_KEY, false);
		initProperty(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY, new org.eclipse.swt.graphics.RGB(0, 0, 0));
		initProperty(org.archstudio.bna.facets.IHasFontData.FONT_NAME_KEY, "Dialog");
		initProperty(org.archstudio.bna.facets.IHasFontData.FONT_SIZE_KEY, 12);
		initProperty(org.archstudio.bna.facets.IHasFontData.FONT_STYLE_KEY, org.archstudio.swtutils.constants.FontStyle.NORMAL);
		initProperty(org.archstudio.bna.facets.IHasGradientFilled.GRADIENT_FILLED_KEY, true);
		initProperty(org.archstudio.bna.facets.IHasLife.LIFE_KEY, 5000);
		initProperty(org.archstudio.bna.facets.IHasSecondaryColor.SECONDARY_COLOR_KEY, new org.eclipse.swt.graphics.RGB(192, 192, 192));
		initProperty(org.archstudio.bna.facets.IHasText.TEXT_KEY, "Text");
		super.initProperties();
	}

	public java.awt.geom.Point2D getAnchorPoint() {
		return get(org.archstudio.bna.facets.IHasAnchorPoint.ANCHOR_POINT_KEY);
	}

	/*package*/ java.awt.geom.Point2D getRawAnchorPoint() {
		return getRaw(org.archstudio.bna.facets.IHasAnchorPoint.ANCHOR_POINT_KEY);
	}

	public void setAnchorPoint(java.awt.geom.Point2D anchorPoint) {
		set(org.archstudio.bna.facets.IHasAnchorPoint.ANCHOR_POINT_KEY, anchorPoint);
	}

	/*package*/ java.awt.geom.Point2D setRawAnchorPoint(java.awt.geom.Point2D anchorPoint) {
		return setRaw(org.archstudio.bna.facets.IHasAnchorPoint.ANCHOR_POINT_KEY, anchorPoint);
	}

	public @Nullable org.eclipse.swt.graphics.RGB getColor() {
		return get(org.archstudio.bna.facets.IHasColor.COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawColor() {
		return getRaw(org.archstudio.bna.facets.IHasColor.COLOR_KEY);
	}

	public void setColor(@Nullable org.eclipse.swt.graphics.RGB color) {
		set(org.archstudio.bna.facets.IHasColor.COLOR_KEY, color);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawColor(@Nullable org.eclipse.swt.graphics.RGB color) {
		return setRaw(org.archstudio.bna.facets.IHasColor.COLOR_KEY, color);
	}

	public boolean isDontIncreaseFontSize() {
		return get(org.archstudio.bna.facets.IHasFontData.DONT_INCREASE_FONT_SIZE_KEY);
	}

	/*package*/ boolean isRawDontIncreaseFontSize() {
		return getRaw(org.archstudio.bna.facets.IHasFontData.DONT_INCREASE_FONT_SIZE_KEY);
	}

	public void setDontIncreaseFontSize(boolean dontIncreaseFontSize) {
		set(org.archstudio.bna.facets.IHasFontData.DONT_INCREASE_FONT_SIZE_KEY, dontIncreaseFontSize);
	}

	/*package*/ boolean isRawDontIncreaseFontSize(boolean dontIncreaseFontSize) {
		return setRaw(org.archstudio.bna.facets.IHasFontData.DONT_INCREASE_FONT_SIZE_KEY, dontIncreaseFontSize);
	}

	public @Nullable org.eclipse.swt.graphics.RGB getEdgeColor() {
		return get(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawEdgeColor() {
		return getRaw(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY);
	}

	public void setEdgeColor(@Nullable org.eclipse.swt.graphics.RGB edgeColor) {
		set(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY, edgeColor);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawEdgeColor(@Nullable org.eclipse.swt.graphics.RGB edgeColor) {
		return setRaw(org.archstudio.bna.facets.IHasEdgeColor.EDGE_COLOR_KEY, edgeColor);
	}

	public java.lang.String getFontName() {
		return get(org.archstudio.bna.facets.IHasFontData.FONT_NAME_KEY);
	}

	/*package*/ java.lang.String getRawFontName() {
		return getRaw(org.archstudio.bna.facets.IHasFontData.FONT_NAME_KEY);
	}

	public void setFontName(java.lang.String fontName) {
		set(org.archstudio.bna.facets.IHasFontData.FONT_NAME_KEY, fontName);
	}

	/*package*/ java.lang.String setRawFontName(java.lang.String fontName) {
		return setRaw(org.archstudio.bna.facets.IHasFontData.FONT_NAME_KEY, fontName);
	}

	public int getFontSize() {
		return get(org.archstudio.bna.facets.IHasFontData.FONT_SIZE_KEY);
	}

	/*package*/ int getRawFontSize() {
		return getRaw(org.archstudio.bna.facets.IHasFontData.FONT_SIZE_KEY);
	}

	public void setFontSize(int fontSize) {
		set(org.archstudio.bna.facets.IHasFontData.FONT_SIZE_KEY, fontSize);
	}

	/*package*/ int setRawFontSize(int fontSize) {
		return setRaw(org.archstudio.bna.facets.IHasFontData.FONT_SIZE_KEY, fontSize);
	}

	public org.archstudio.swtutils.constants.FontStyle getFontStyle() {
		return get(org.archstudio.bna.facets.IHasFontData.FONT_STYLE_KEY);
	}

	/*package*/ org.archstudio.swtutils.constants.FontStyle getRawFontStyle() {
		return getRaw(org.archstudio.bna.facets.IHasFontData.FONT_STYLE_KEY);
	}

	public void setFontStyle(org.archstudio.swtutils.constants.FontStyle fontStyle) {
		set(org.archstudio.bna.facets.IHasFontData.FONT_STYLE_KEY, fontStyle);
	}

	/*package*/ org.archstudio.swtutils.constants.FontStyle setRawFontStyle(org.archstudio.swtutils.constants.FontStyle fontStyle) {
		return setRaw(org.archstudio.bna.facets.IHasFontData.FONT_STYLE_KEY, fontStyle);
	}

	public boolean isGradientFilled() {
		return get(org.archstudio.bna.facets.IHasGradientFilled.GRADIENT_FILLED_KEY);
	}

	/*package*/ boolean isRawGradientFilled() {
		return getRaw(org.archstudio.bna.facets.IHasGradientFilled.GRADIENT_FILLED_KEY);
	}

	public void setGradientFilled(boolean gradientFilled) {
		set(org.archstudio.bna.facets.IHasGradientFilled.GRADIENT_FILLED_KEY, gradientFilled);
	}

	/*package*/ boolean isRawGradientFilled(boolean gradientFilled) {
		return setRaw(org.archstudio.bna.facets.IHasGradientFilled.GRADIENT_FILLED_KEY, gradientFilled);
	}

	public int getLife() {
		return get(org.archstudio.bna.facets.IHasLife.LIFE_KEY);
	}

	/*package*/ int getRawLife() {
		return getRaw(org.archstudio.bna.facets.IHasLife.LIFE_KEY);
	}

	public void setLife(int life) {
		set(org.archstudio.bna.facets.IHasLife.LIFE_KEY, life);
	}

	/*package*/ int setRawLife(int life) {
		return setRaw(org.archstudio.bna.facets.IHasLife.LIFE_KEY, life);
	}

	public @Nullable org.eclipse.swt.graphics.RGB getSecondaryColor() {
		return get(org.archstudio.bna.facets.IHasSecondaryColor.SECONDARY_COLOR_KEY);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB getRawSecondaryColor() {
		return getRaw(org.archstudio.bna.facets.IHasSecondaryColor.SECONDARY_COLOR_KEY);
	}

	public void setSecondaryColor(@Nullable org.eclipse.swt.graphics.RGB secondaryColor) {
		set(org.archstudio.bna.facets.IHasSecondaryColor.SECONDARY_COLOR_KEY, secondaryColor);
	}

	/*package*/ @Nullable org.eclipse.swt.graphics.RGB setRawSecondaryColor(@Nullable org.eclipse.swt.graphics.RGB secondaryColor) {
		return setRaw(org.archstudio.bna.facets.IHasSecondaryColor.SECONDARY_COLOR_KEY, secondaryColor);
	}

	public java.lang.String getText() {
		return get(org.archstudio.bna.facets.IHasText.TEXT_KEY);
	}

	/*package*/ java.lang.String getRawText() {
		return getRaw(org.archstudio.bna.facets.IHasText.TEXT_KEY);
	}

	public void setText(java.lang.String text) {
		set(org.archstudio.bna.facets.IHasText.TEXT_KEY, text);
	}

	/*package*/ java.lang.String setRawText(java.lang.String text) {
		return setRaw(org.archstudio.bna.facets.IHasText.TEXT_KEY, text);
	}

}
